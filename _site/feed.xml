<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>flypig's house</title>
		<description>a way to effect world</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Myisam与Innodb区别</title>
				<description>&lt;p&gt;关于这个问题，网上的版本很多，但是全面的很少，有的答案很陈旧，特整理后出来，以备自己查询：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;MyISAM普遍认为有更快查询速度，但是最新的Mysql中InnoDB的大幅改进，两者速度基本没有差别。&lt;/li&gt;
  &lt;li&gt;MyISAM支持&lt;code class=&quot;highlighter-rouge&quot;&gt;FULLTEXT&lt;/code&gt;全文索引，而InnonDB从5.6开始也支持全文索引，因此，这一项不同也不在存在。&lt;/li&gt;
  &lt;li&gt;InnoDB支持外键/事务/行锁；&lt;/li&gt;
  &lt;li&gt;InnoDB中一定会有主健，索引也会包含主健(覆盖索引)；&lt;/li&gt;
  &lt;li&gt;MyISAM中保存了行数，在&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(*) FROM tbl_name&lt;/code&gt;中速度会更快。&lt;/li&gt;
  &lt;li&gt;MyISAM中索引与数据分开存储（非聚集索引），InnoDB中数据和索引是一起存储的。MyISAM中索引数据保存的数据地址(指针)，而InnoDB索引是数据本身(聚集索引)，其次，InnoDB的辅助索引中保存的是相应的主健的值，因此辅助索引检测需要两遍索引：首先检测辅助索引获得主健，随后用主健到主索引中检索获得相应记录。&lt;/li&gt;
  &lt;li&gt;InnoDB支持热备份，安全恢复。&lt;/li&gt;
&lt;/ol&gt;

</description>
				<pubDate>Thu, 01 Jun 2017 19:11:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Mysql_MyISAM_InnoDB</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Mysql_MyISAM_InnoDB</guid>
			</item>
		
			<item>
				<title>mysql_basic_int(10)_and_varchar(20)</title>
				<description>&lt;ul&gt;
  &lt;li&gt;int(10) 括号中的10表示什么？与int(11)有什么区别？&lt;br /&gt;
答：括号中的数字表示在与数据库交互中显示的宽度(10进制)范围，与数据存储没有关系。&lt;br /&gt;
如果，为一列数据设置&lt;code class=&quot;highlighter-rouge&quot;&gt;ZEROFILL&lt;/code&gt;属性，则相应的查询输出在小于显示宽度条件下，在输出左侧补零，如果超出输出范围，则输出原始数据。&lt;/li&gt;
  &lt;li&gt;VARCHAR（20）能存多少个中文字符？&lt;br /&gt;
答：在MYSQL 5.0版本以下，括号中的数字表示的是字节，则根据编码的方式不同，存入汉字的个数也不同(&lt;code class=&quot;highlighter-rouge&quot;&gt;GBK&lt;/code&gt;：2字节,&lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt;:2-4字节)。MYSQL 5.0版本以上表示的是字符个数，则可存入20个字符。&lt;/li&gt;
&lt;/ul&gt;

</description>
				<pubDate>Thu, 01 Jun 2017 11:41:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/MYSQL-job-interview-question</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/MYSQL-job-interview-question</guid>
			</item>
		
			<item>
				<title>MYSQL_Operations</title>
				<description>&lt;h2 id=&quot;常用指令&quot;&gt;常用指令&lt;/h2&gt;
&lt;h3 id=&quot;ddldata-definition-language数据定义语言语言&quot;&gt;DDL(DATA DEFINITION LANGUAGE):数据定义语言语言&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE DATABASE [IF NOT EXISTS] db_name
  [DEFAULT] CHARACTOR SET [=] charset_name&lt;/code&gt; 生成数据库；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW CREATE DATABASE db_name \G&lt;/code&gt; 显示数据库的构造语句与编码方式；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE TABLE [IF NOT EXISTS] tbl_name(create_defination,...)[table_options][partition_options]&lt;/code&gt;　创建数据表
    &lt;ul&gt;
      &lt;li&gt;create_defination:&lt;code class=&quot;highlighter-rouge&quot;&gt;(col_name col_defination |primay key (index_col_name) | [constraint [symbol]] [unique|fulltext|spatial] [index|key] [index_name] (index_col_name[length]) [ASC|DESC])|[constraint [symbol]] foreign key [index_name] (index_col_name,...) references tal_name(index_col_name,....))&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;table_options:&lt;code class=&quot;highlighter-rouge&quot;&gt;engine [=] engine_name|auto_increment[=] value | [default] charactor set [=] charset_name&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW CREATE TABLE tbl_name \G&lt;/code&gt; 显示数据表的构造语句与编码方式；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DROP DATABASE [IF EXISTS] db_name&lt;/code&gt; 删除数据库；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DROP TABLE [IF EXITSTS] tbl_name&lt;/code&gt; 删除数据表；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name ADD [COLUMN] (col_name column_defination,...) [FIRST|AFTER] index_col_name&lt;/code&gt; 修改数据表——增加列；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name ADD primay key(index_col_name)&lt;/code&gt; 修改数据表——增加主健；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name ADD [CONSTAINT [symbol]] [unique|fulltext|spatial] [index|key] [index_name] (index_col_name) [ASC|DESC]&lt;/code&gt; 修改在数据表——增加索引；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name MODIFY [column] col_name column_defination [first|after] col_name&lt;/code&gt; 修改数据表——修改字段;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name CHANGE [COLUMN] old_col_name new_col_name column_defination [first|after] col_name&lt;/code&gt; 修改数据表——修改字段（给出字段名）&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name RENAME [TO|AS] new_tbl_name&lt;/code&gt; 重命名表名；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name RENAME [INDEX|KEY] old_index_name TO new_index_name&lt;/code&gt; 重命名索引名称名称；&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name DROP xxx&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[COLUMN] col_name&lt;/code&gt; 删除列&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;primary key&lt;/code&gt; 删除主健主键&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[index|key] index_name &lt;/code&gt; 删除索引&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;foreign key fk_symbol&lt;/code&gt; 删除外键&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ALTER TABLE tbl_name engine[=]engine_name&lt;/code&gt; 修改表引擎；
    &lt;h3 id=&quot;dmldata-manipulation-language数据操作语言&quot;&gt;DML(DATA MANIPULATION LANGUAGE)数据操作语言&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT select_expr [FROM table_references] [WHERE where_condition] [GROUP BY {col_name|expr|position} [ASC|DESC]] [HAVING where_condition] [ORDER BY {col_name|expr|position} [ASC|DESC]] [LIMIT{[off_set],row_count}]&lt;/code&gt; 查询数据
    &lt;ul&gt;
      &lt;li&gt;PS：having 用在聚合后筛选数据，一般用在group by 之后，而where是聚合前筛选数据。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT INTO tbl_name [(col_name1,...)] VALUES (value1,...)&lt;/code&gt; 插入数据&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE tbl_references SET col_name1={expr1|DEFAULT} [,col_name2={expr2|DEFAULT}...] [WHERE where_condition] [ORDER BY...] [LIMIT row_count]&lt;/code&gt; 修改数据&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE FROM TABLE tbl_name [WHERE where_condition] [ORDER BY...][LIMIT row_count]&lt;/code&gt; 删除数据
    &lt;h3 id=&quot;tcltransaction-control-language事务控制语言&quot;&gt;TCL(Transaction control language)：事务控制语言&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;事务(Transaction):一个独立的工作单元，一组原子性的SQL查询语句组合。&lt;/li&gt;
  &lt;li&gt;MYSQL默认事务自动提交，因此开启事务必须使用&lt;code class=&quot;highlighter-rouge&quot;&gt;beign | start transaction&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;set autocommit = 0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt; 提交事务&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rollback&lt;/code&gt; 回滚事务&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Thu, 01 Jun 2017 11:41:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/MYSQL_Operations</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/MYSQL_Operations</guid>
			</item>
		
			<item>
				<title>Git Commands List</title>
				<description>&lt;h2 id=&quot;常用指令&quot;&gt;常用指令&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git clone [url] [--depth=1]&lt;/code&gt;　克隆远端分支到本地,–depth=1仅克隆最近因此的提交，加快速度&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git config --list&lt;/code&gt;　输出git的当前配置&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git add [.]&lt;/code&gt;　增加当前目录的所有变化文件到暂存区&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git commit -m [message]&lt;/code&gt;　提交变化到本地仓库&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git branch&lt;/code&gt;　列出所有本地分支
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt;　远端分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-a&lt;/code&gt;　远端分支和本地分支&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git push&lt;/code&gt;　提交本地修改到远端分支&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git pull&lt;/code&gt;　取回远端仓库的变化并与本地分支合并&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git checkout [branch name]&lt;/code&gt;　切换到指定分支，同时更新工作区&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git status&lt;/code&gt; 　显示所有的变更文件&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git log&lt;/code&gt;　显示版本提交历史&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git reset --hard [commit]&lt;/code&gt;　重置当前分支到指定的commit&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sat, 13 May 2017 11:41:06 +0800</pubDate>
				<link>http://localhost:4000/2017/05/Git-Command-List</link>
				<guid isPermaLink="true">http://localhost:4000/2017/05/Git-Command-List</guid>
			</item>
		
			<item>
				<title>Linux Commands</title>
				<description>&lt;h2 id=&quot;1常用指令&quot;&gt;1.常用指令&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;su　user/root　　切换用户&lt;/li&gt;
  &lt;li&gt;ls　显示文件或目录
    &lt;ul&gt;
      &lt;li&gt;-l　显示文件的详细信息&lt;/li&gt;
      &lt;li&gt;-a　显示隐藏的文件或目录&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;cd　目录切换&lt;/li&gt;
  &lt;li&gt;mkdir　创建目录&lt;/li&gt;
  &lt;li&gt;echo　结果输出，可写入到文件&lt;/li&gt;
  &lt;li&gt;touch　创建一个空的文件&lt;/li&gt;
  &lt;li&gt;cat　查看文件内容&lt;/li&gt;
  &lt;li&gt;cp　复制&lt;/li&gt;
  &lt;li&gt;mv　移动&lt;/li&gt;
  &lt;li&gt;rm　删除文件
    &lt;ul&gt;
      &lt;li&gt;-r　递归删除&lt;/li&gt;
      &lt;li&gt;-f　强制删除&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ln　创建链接
    &lt;ul&gt;
      &lt;li&gt;-s　创建软链接&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ctrl + alt + F1　切换到命令行模式
    &lt;ul&gt;
      &lt;li&gt;+alt + F2　切换到图形界面&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;kill　杀死进程&lt;/li&gt;
  &lt;li&gt;ps/top　查看进程id&lt;/li&gt;
  &lt;li&gt;shutdown　关机&lt;/li&gt;
  &lt;li&gt;reboot　重启&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2vim命令&quot;&gt;2.vim命令&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;i　切换插入模式&lt;/li&gt;
  &lt;li&gt;esc　切换到命令模式&lt;br /&gt;
命令模式下：&lt;/li&gt;
  &lt;li&gt;:q　退出&lt;/li&gt;
  &lt;li&gt;:w　写入&lt;/li&gt;
  &lt;li&gt;:q!　强制退出&lt;/li&gt;
  &lt;li&gt;:wq　保存后退出&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 10 May 2017 11:41:06 +0800</pubDate>
				<link>http://localhost:4000/2017/05/Linux-commands</link>
				<guid isPermaLink="true">http://localhost:4000/2017/05/Linux-commands</guid>
			</item>
		
			<item>
				<title>Linux 读写权限说明</title>
				<description>&lt;h2 id=&quot;文件权限简介&quot;&gt;文件权限简介&lt;/h2&gt;
&lt;p&gt;Linux中文件有三种权限：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;　R　&lt;/td&gt;
      &lt;td&gt;读　　　&lt;/td&gt;
      &lt;td&gt;用数字４表示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;　W　&lt;/td&gt;
      &lt;td&gt;写　　　&lt;/td&gt;
      &lt;td&gt;用数字２表示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;　X　&lt;/td&gt;
      &lt;td&gt;可　　　&lt;/td&gt;
      &lt;td&gt;用数字１表示&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;　　&lt;br /&gt;
一个典型的普通文件的权限表示为10个长度的字符，分为四段，以&lt;code class=&quot;highlighter-rouge&quot;&gt;-rw-rw-r--&lt;/code&gt;为例：&lt;br /&gt;
其中第一段&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;表示这是一个普通文件,如果为&lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt;则表示目录；&lt;br /&gt;
第二段&lt;code class=&quot;highlighter-rouge&quot;&gt;rw-&lt;/code&gt;，表示当前用户有读写权限，用数字表示为&lt;code class=&quot;highlighter-rouge&quot;&gt;4+2=6&lt;/code&gt;；&lt;br /&gt;
第三段&lt;code class=&quot;highlighter-rouge&quot;&gt;rw-&lt;/code&gt;，表示当前所属用户组有读写权限，用数字表示为&lt;code class=&quot;highlighter-rouge&quot;&gt;4+2=6&lt;/code&gt;；&lt;br /&gt;
最后一段&lt;code class=&quot;highlighter-rouge&quot;&gt;r--&lt;/code&gt;，表示其他用户有读权限，用数字表示为&lt;code class=&quot;highlighter-rouge&quot;&gt;2&lt;/code&gt;；&lt;br /&gt;
因此，此文件的操作权限用数字表示为&lt;code class=&quot;highlighter-rouge&quot;&gt;662&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&quot;修改权限&quot;&gt;修改权限&lt;/h2&gt;
&lt;p&gt;命令格式：&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chmod [u|g|o|a][+|-][r|w|x]　文件 or 目录&lt;/code&gt;&lt;br /&gt;
其中,&lt;code class=&quot;highlighter-rouge&quot;&gt;u&lt;/code&gt;：当前用户，&lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt;：所属用户组，&lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt;：其他用户，&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;：所有用户&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;：增加权限，&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;：取消权限&lt;br /&gt;
将上述权限&lt;code class=&quot;highlighter-rouge&quot;&gt;662&lt;/code&gt;的文件改为&lt;code class=&quot;highlighter-rouge&quot;&gt;743&lt;/code&gt;的权限：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;方式1：&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chmod u+x g-w o+x filename&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;方式2：&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chmod 743 filename&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 10 May 2017 11:41:06 +0800</pubDate>
				<link>http://localhost:4000/2017/05/Linux-chmod</link>
				<guid isPermaLink="true">http://localhost:4000/2017/05/Linux-chmod</guid>
			</item>
		
			<item>
				<title>PSR-2</title>
				<description>&lt;p&gt;This guide extends and expands on &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md&quot;&gt;PSR-1&lt;/a&gt;, the basic coding standard.&lt;/p&gt;

&lt;p&gt;The intent of this guide is to reduce cognitive friction when scanning code from different authors. It does so by enumerating a shared set of rules and expectations about how to format PHP code.&lt;/p&gt;

&lt;p&gt;The style rules herein are derived from commonalities among the various member projects. When various authors collaborate across multiple projects, it helps to have one set of guidelines to be used among all those projects. Thus, the benefit of this guide is not in the rules themselves, but in the sharing of those rules.&lt;/p&gt;

&lt;p&gt;The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2119.txt&quot;&gt;RFC 2119&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;1-overview&quot;&gt;1. Overview&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Code MUST follow a “coding style guide” PSR &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md&quot;&gt;PSR-1&lt;/a&gt;, the basic coding standard.&lt;/li&gt;
  &lt;li&gt;Code MUST use 4 spaces for indenting, not tabs.&lt;/li&gt;
  &lt;li&gt;There MUST NOT be a hard limit on line length; the soft limit MUST be 120 characters; lines SHOULD be 80 characters or less.&lt;/li&gt;
  &lt;li&gt;There MUST be one blank line after the &lt;code class=&quot;highlighter-rouge&quot;&gt;namespace&lt;/code&gt; declaration, and there MUST be one blank line after the block of &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; declarations.&lt;/li&gt;
  &lt;li&gt;Opening braces for classes MUST go on the next line, and closing braces MUST go on the next line after the body.&lt;/li&gt;
  &lt;li&gt;Opening braces for methods MUST go on the next line, and closing braces MUST go on the next line after the body.&lt;/li&gt;
  &lt;li&gt;Visibility MUST be declared on all properties and methods; &lt;code class=&quot;highlighter-rouge&quot;&gt;abstract&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;final&lt;/code&gt; MUST be declared before the visibility; &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; MUST be declared after the visibility.&lt;/li&gt;
  &lt;li&gt;Control structure keywords MUST have one space after them; method and function calls MUST NOT.&lt;/li&gt;
  &lt;li&gt;Opening braces for control structures MUST go on the same line, and closing braces MUST go on the next line after the body.&lt;/li&gt;
  &lt;li&gt;Opening parentheses for control structures MUST NOT have a space after them, and closing parentheses for control structures MUST NOT have a space before.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11-example&quot;&gt;1.1 Example&lt;/h3&gt;

&lt;p&gt;This example encompasses some of the rules below as a quick overview:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vendor\Package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FooInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarClass&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OtherVendor\OtherPackage\BazClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FooInterface&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sampleMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;BazClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arg3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// method body
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Fri, 05 May 2017 21:20:06 +0800</pubDate>
				<link>http://localhost:4000/2017/05/PSR-2</link>
				<guid isPermaLink="true">http://localhost:4000/2017/05/PSR-2</guid>
			</item>
		
	</channel>
</rss>
