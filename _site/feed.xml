<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>flypig's house</title>
		<description>a way to effect world</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>20170704 入职第一天 记录</title>
				<description>&lt;p&gt;上午主要是填写了各种文件，账号和各种权限还没有开！从下午开始简单记录：&lt;br /&gt;
这次加入的是新房研发部门，团队是旅居研发团队。团队中除了leader健总，还有师父王宝明，李振兴，张留彬三名加入链家一年以上的老员工。剩下四人是新加入链家的新人，包括我，牛京，王伉三个基本同一时间入职的，还有郑泽亮同学，应该是入职链家有一段时间了。&lt;/p&gt;
&lt;h3 id=&quot;与师傅的第一次交谈&quot;&gt;与师傅的第一次交谈&lt;/h3&gt;

&lt;p&gt;师父的介绍主要分为三块，第一部分：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;主要是开发流程，主要包括以下步骤，&lt;br /&gt;
需求评审–&amp;gt;技术评审–&amp;gt;排期–&amp;gt;开发、测试–&amp;gt;上线。&lt;br /&gt;
几个主要的角色缩写：PM–产品经理，RD–研发，FE–前端，QA–质量管理，OP–运维&lt;br /&gt;
这个开发流程和在中兴通讯中的研发流程，大体是相同的，也就是说通信与互联网的壁垒那不是那么绝对的，都是在互相学习的。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第二部分：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;有关团队的业务，目前新房研发部，在新房业务主要包括C端和B端，C端负责给客户展示，B端则是给经济人管理客户，房源以及交易流程用的。而我们团队现在是一个全新的业务，旅居–就是给客户提供在旅游城市买房的服务，目前仅开通了海南和云南，这是一个全新的业务，有很多机会和学习的内容！值得期待。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第三部分：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;有关新员工的入职学习，第一条就是日报(最好)，如果略频繁，周报也可以；第二条就是业务的学习和串讲；第三条就是分享，不限于技术，可以是工作感悟，BUG或者问题解决方法。&lt;br /&gt;
总结起来就是，多交流，多沟通，多请教，多学习。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;关于团队&quot;&gt;关于团队&lt;/h3&gt;
&lt;p&gt;每周1,3,5 中午12点站会，每周3下午5点周会。&lt;br /&gt;
团队目前在使用的框架是phalcon，一种基于C扩展的高速PHP框架。&lt;/p&gt;

</description>
				<pubDate>Tue, 04 Jul 2017 15:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/07/lianjia-job-content-1</link>
				<guid isPermaLink="true">http://localhost:4000/2017/07/lianjia-job-content-1</guid>
			</item>
		
			<item>
				<title>LeetCode_617. Merge Two Binary Trees</title>
				<description>&lt;h3 id=&quot;617-merge-two-binary-trees&quot;&gt;617. Merge Two Binary Trees&lt;/h3&gt;
&lt;p&gt;Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not.&lt;/p&gt;

&lt;p&gt;You need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.&lt;br /&gt;
&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/source/images/leetcode/001.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: The merging process must start from the root nodes of both trees.&lt;br /&gt;
+———-+——–+——–+&lt;br /&gt;
Write a SQL query to find the cancellation rate of requests made by unbanned clients between Oct 1, 2013 and Oct 3, 2013. For the above tables, your SQL query should return the following rows with the cancellation rate being rounded to two decimal places.&lt;/p&gt;

&lt;hr /&gt;
&lt;hr /&gt;

</description>
				<pubDate>Fri, 23 Jun 2017 20:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-algorithm-617</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-algorithm-617</guid>
			</item>
		
			<item>
				<title>LeetCode_262. Trips and Users</title>
				<description>&lt;h3 id=&quot;262-trips-and-users&quot;&gt;262. Trips and Users&lt;/h3&gt;
&lt;p&gt;The Trips table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the Users table. Status is an ENUM type of (‘completed’, ‘cancelled_by_driver’, ‘cancelled_by_client’).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+—-+———–+———–+———+——————–+———-+&lt;br /&gt;
| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|&lt;br /&gt;
+—-+———–+———–+———+——————–+———-+&lt;br /&gt;
| 1  |     1     |    10     |    1    |     completed      |2013-10-01|&lt;br /&gt;
| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|&lt;br /&gt;
| 3  |     3     |    12     |    6    |     completed      |2013-10-01|&lt;br /&gt;
| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|&lt;br /&gt;
| 5  |     1     |    10     |    1    |     completed      |2013-10-02|&lt;br /&gt;
| 6  |     2     |    11     |    6    |     completed      |2013-10-02|&lt;br /&gt;
| 7  |     3     |    12     |    6    |     completed      |2013-10-02|&lt;br /&gt;
| 8  |     2     |    12     |    12   |     completed      |2013-10-03|&lt;br /&gt;
| 9  |     3     |    10     |    12   |     completed      |2013-10-03| &lt;br /&gt;
| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|&lt;br /&gt;
+—-+———–+———–+———+——————–+———-+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Users table holds all users. Each user has an unique Users_Id, and Role is an ENUM type of (‘client’, ‘driver’, ‘partner’).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+———-+——–+——–+&lt;br /&gt;
| Users_Id | Banned |  Role  |&lt;br /&gt;
+———-+——–+——–+&lt;br /&gt;
|    1     |   No   | client |&lt;br /&gt;
|    2     |   Yes  | client |&lt;br /&gt;
|    3     |   No   | client |&lt;br /&gt;
|    4     |   No   | client |&lt;br /&gt;
|    10    |   No   | driver |&lt;br /&gt;
|    11    |   No   | driver |&lt;br /&gt;
|    12    |   No   | driver |&lt;br /&gt;
|    13    |   No   | driver |&lt;br /&gt;
+———-+——–+——–+&lt;br /&gt;
Write a SQL query to find the cancellation rate of requests made by unbanned clients between Oct 1, 2013 and Oct 3, 2013. For the above tables, your SQL query should return the following rows with the cancellation rate being rounded to two decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;+————+——————-+&lt;br /&gt;
|     Day    | Cancellation Rate |&lt;br /&gt;
+————+——————-+&lt;br /&gt;
| 2013-10-01 |       0.33        |&lt;br /&gt;
| 2013-10-02 |       0.00        |&lt;br /&gt;
| 2013-10-03 |       0.50        |&lt;br /&gt;
+————+——————-+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：描述的很复杂的一道题目，难度式&lt;code class=&quot;highlighter-rouge&quot;&gt;hard&lt;/code&gt;，其实就是处理逻辑问题：&lt;br /&gt;
首先，查出结果的两个字段值，在退单率上，用了条件判断进行筛选，这是关键；&lt;br /&gt;
然后就是正常的加上限定的查询条件了，这里判断是否为有效用户通过子查询获得，&lt;br /&gt;
也可用用关联表。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Request_at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
       &lt;span class=&quot;no&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'completed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Cancellation Rate'&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Trips&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Request_at&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2013-10-01'&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2013-10-03'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Client_id&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Users_Id&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Banned&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Yes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Request_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Fri, 23 Jun 2017 18:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-262</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-262</guid>
			</item>
		
			<item>
				<title>LeetCode_596. Classes More Than 5 Students</title>
				<description>&lt;h3 id=&quot;596-classes-more-than-5-students&quot;&gt;596. Classes More Than 5 Students&lt;/h3&gt;
&lt;p&gt;There is a table courses with columns: student and class&lt;/p&gt;

&lt;p&gt;Please list out all classes which have more than or equal to 5 students.&lt;/p&gt;

&lt;p&gt;For example, the table:&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+———+————+&lt;br /&gt;
| student | class      |&lt;br /&gt;
+———+————+&lt;br /&gt;
| A       | Math       |&lt;br /&gt;
| B       | English    |&lt;br /&gt;
| C       | Math       |&lt;br /&gt;
| D       | Biology    |&lt;br /&gt;
| E       | Math       |&lt;br /&gt;
| F       | Computer   |&lt;br /&gt;
| G       | Math       |&lt;br /&gt;
| H       | Math       |&lt;br /&gt;
| I       | Math       |&lt;br /&gt;
+———+————+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Should output:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+———+&lt;br /&gt;
| class   |&lt;br /&gt;
+———+&lt;br /&gt;
| Math    |&lt;br /&gt;
+———+&lt;br /&gt;
Note:&lt;br /&gt;
The students should not be counted duplicate in each course.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：输出超过5个学生班级即可，没注意Note里说不可重复计算学生数量，用例里面也确实出现了重复项，加上&lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;就可以了：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;一般方法：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;子查询&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;courses&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Fri, 23 Jun 2017 10:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-596</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-596</guid>
			</item>
		
			<item>
				<title>LeetCode_627. Swap Salary</title>
				<description>&lt;h3 id=&quot;627-swap-salary&quot;&gt;627. Swap Salary&lt;/h3&gt;
&lt;p&gt;Given a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update query and no intermediate temp table.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;id 　&lt;/th&gt;
        &lt;th&gt;name 　&lt;/th&gt;
        &lt;th&gt;sex　&lt;/th&gt;
        &lt;th&gt;salary&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;1&lt;/td&gt;
        &lt;td&gt;A&lt;/td&gt;
        &lt;td&gt;m&lt;/td&gt;
        &lt;td&gt;2500&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;2&lt;/td&gt;
        &lt;td&gt;B&lt;/td&gt;
        &lt;td&gt;f&lt;/td&gt;
        &lt;td&gt;1500&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;3&lt;/td&gt;
        &lt;td&gt;C&lt;/td&gt;
        &lt;td&gt;m&lt;/td&gt;
        &lt;td&gt;5500&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;D&lt;/td&gt;
        &lt;td&gt;f&lt;/td&gt;
        &lt;td&gt;500&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;After running your query, the above salary table should have the following rows:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;thead&gt;
      &lt;tr&gt;
        &lt;th&gt;id　&lt;/th&gt;
        &lt;th&gt;name　&lt;/th&gt;
        &lt;th&gt;sex 　&lt;/th&gt;
        &lt;th&gt;salary 　&lt;/th&gt;
      &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;1&lt;/td&gt;
        &lt;td&gt;A&lt;/td&gt;
        &lt;td&gt;f&lt;/td&gt;
        &lt;td&gt;2500&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;2&lt;/td&gt;
        &lt;td&gt;B&lt;/td&gt;
        &lt;td&gt;m&lt;/td&gt;
        &lt;td&gt;1500&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;3&lt;/td&gt;
        &lt;td&gt;C&lt;/td&gt;
        &lt;td&gt;f&lt;/td&gt;
        &lt;td&gt;5500&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;D&lt;/td&gt;
        &lt;td&gt;m&lt;/td&gt;
        &lt;td&gt;500&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：题目是交换薪水，实际是反转性别，通用方法需要一点点判断：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'f'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;或者写成Case搜索函数的形式：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'f'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;MARK一下leetCode网友的两条超短语句：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'f'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'f'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'m'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Thu, 22 Jun 2017 15:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-627</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-627</guid>
			</item>
		
			<item>
				<title>LeetCode_620. Not Boring Movies</title>
				<description>&lt;h3 id=&quot;620-not-boring-movies&quot;&gt;620. Not Boring Movies&lt;/h3&gt;
&lt;p&gt;X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies’ ratings and descriptions.&lt;/p&gt;

&lt;p&gt;Please write a SQL query to output movies with an odd numbered ID and a description that is not ‘boring’. Order the result by rating.&lt;/p&gt;

&lt;p&gt;For example, table &lt;code class=&quot;highlighter-rouge&quot;&gt;cinema&lt;/code&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+———+———–+————–+———–+&lt;br /&gt;
|   id    | movie     |  description |  rating   |&lt;br /&gt;
+———+———–+————–+———–+&lt;br /&gt;
|   1     | War       |   great 3D   |   8.9     |&lt;br /&gt;
|   2     | Science   |   fiction    |   8.5     |&lt;br /&gt;
|   3     | irish     |   boring     |   6.2     |&lt;br /&gt;
|   4     | Ice song  |   Fantacy    |   8.6     |&lt;br /&gt;
|   5     | House card|   Interesting|   9.1     |&lt;br /&gt;
+———+———–+————–+———–+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For the example above, the output should be:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+———+———–+————–+———–+&lt;br /&gt;
|   id    | movie     |  description |  rating   |&lt;br /&gt;
+———+———–+————–+———–+&lt;br /&gt;
|   5     | House card|   Interesting|   9.1     |&lt;br /&gt;
|   1     | War       |   great 3D   |   8.9     |&lt;br /&gt;
+———+———–+————–+———–+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：非常简单，没啥说的，一次搞定,这里取奇数有多种方式，MARK一下：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;mod(id,2)=1,&lt;br /&gt;
id%2=1&lt;br /&gt;
id&amp;amp;1&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Write your MySQL query statement below&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cinema&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'boring'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Thu, 22 Jun 2017 10:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-620</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-620</guid>
			</item>
		
			<item>
				<title>LeetCode_595. Big Countries</title>
				<description>&lt;h3 id=&quot;595-big-countries&quot;&gt;595. Big Countries&lt;/h3&gt;
&lt;p&gt;There is a table World&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+—————–+————+————+————–+—————+&lt;br /&gt;
| name            | continent  | area       | population   | gdp           |&lt;br /&gt;
+—————–+————+————+————–+—————+&lt;br /&gt;
| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |&lt;br /&gt;
| Albania         | Europe     | 28748      | 2831741      | 12960000      |&lt;br /&gt;
| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |&lt;br /&gt;
| Andorra         | Europe     | 468        | 78115        | 3712000       |&lt;br /&gt;
| Angola          | Africa     | 1246700    | 20609294     | 100990000     |&lt;br /&gt;
+—————–+————+————+————–+—————+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A country is big if it has an area of bigger than 3 million square km or a population of more than 25 million.&lt;/p&gt;

&lt;p&gt;Write a SQL solution to output big countries’ name, population and area.&lt;/p&gt;

&lt;p&gt;For example, according to the above table, we should output:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+————–+————-+————–+&lt;br /&gt;
| name         | population  | area         |&lt;br /&gt;
+————–+————-+————–+&lt;br /&gt;
| Afghanistan  | 25500100    | 652230       |&lt;br /&gt;
| Algeria      | 37100000    | 2381741      |&lt;br /&gt;
+————–+————-+————–+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：非常简单，没啥说的，一次搞定：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Write your MySQL query statement below&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;population&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;area&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;area&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000000&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25000000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Wed, 21 Jun 2017 15:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-595</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-595</guid>
			</item>
		
			<item>
				<title>LeetCode_197. Rising Temperature</title>
				<description>&lt;h3 id=&quot;197-rising-temperature&quot;&gt;197. Rising Temperature&lt;/h3&gt;
&lt;p&gt;Given a Weather table, write a SQL query to find all dates’ Ids with higher temperature compared to its previous (yesterday’s) dates.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+———+————+——————+&lt;br /&gt;
| Id(INT) | Date(DATE) | Temperature(INT) |&lt;br /&gt;
+———+————+——————+&lt;br /&gt;
|       1 | 2015-01-01 |               10 |&lt;br /&gt;
|       2 | 2015-01-02 |               25 |&lt;br /&gt;
|       3 | 2015-01-03 |               20 |&lt;br /&gt;
|       4 | 2015-01-04 |               30 |&lt;br /&gt;
+———+————+——————+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, return the following Ids for the above Weather table:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+—-+&lt;br /&gt;
| Id |&lt;br /&gt;
+—-+&lt;br /&gt;
|  2 |&lt;br /&gt;
|  4 |&lt;br /&gt;
+—-+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：找出温度升高那天的Id，题目比较简单，关键是如何找出连续的两天,需要借助MySQL内置的天数转换函数(DATADIFF/TODAYS)：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Write your MySQL query statement below&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Weather&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Weather&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;W2&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Temperature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;W2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Temperature&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DATEDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;W1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;W2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Wed, 21 Jun 2017 10:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-197</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-197</guid>
			</item>
		
			<item>
				<title>LeetCode_196. Delete Duplicate Emails</title>
				<description>&lt;h3 id=&quot;196-delete-duplicate-emails&quot;&gt;196. Delete Duplicate Emails&lt;/h3&gt;
&lt;p&gt;Write a SQL query to delete all duplicate email entries in a table named Person, keeping only unique emails based on its smallest Id.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+—-+——————+&lt;br /&gt;
| Id | Email            |&lt;br /&gt;
+—-+——————+&lt;br /&gt;
| 1  | john@example.com |&lt;br /&gt;
| 2  | bob@example.com  |&lt;br /&gt;
| 3  | john@example.com |&lt;br /&gt;
+—-+——————+&lt;br /&gt;
Id is the primary key column for this table.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example, after running your query, the above &lt;code class=&quot;highlighter-rouge&quot;&gt;Person&lt;/code&gt; table should have the following rows:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+—-+——————+&lt;br /&gt;
| Id | Email            |&lt;br /&gt;
+—-+——————+&lt;br /&gt;
| 1  | john@example.com |&lt;br /&gt;
| 2  | bob@example.com  |&lt;br /&gt;
+—-+——————+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：删除重复的邮箱，按照示例是删除ID较大的重复邮箱：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;子查询，难点在于构造需要删除的ID的集合：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Write your MySQL query statement below&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;person&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个写法如果不把查询出的最小ID集合作为&lt;code class=&quot;highlighter-rouge&quot;&gt;P&lt;/code&gt;的话，会报错：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You can’t specify target table &lt;tbl&gt; for update in FROM clause&lt;/tbl&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;意思说，不可以将同一个表中&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;出的数据，再在表上进行删除等更新操作。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;第二种方式，就是使用连表删除：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;no&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Email&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ANDp1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
				<pubDate>Tue, 20 Jun 2017 17:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-196</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-196</guid>
			</item>
		
			<item>
				<title>LeetCode_185. Department Top Three Salaries</title>
				<description>&lt;h3 id=&quot;185-department-top-three-salaries&quot;&gt;185. Department Top Three Salaries&lt;/h3&gt;
&lt;p&gt;The Employee table holds all employees. Every employee has an Id, and there is also a column for the department Id.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+—-+——-+——–+————–+&lt;br /&gt;
| Id | Name  | Salary | DepartmentId |&lt;br /&gt;
+—-+——-+——–+————–+&lt;br /&gt;
| 1  | Joe   | 70000  | 1            |&lt;br /&gt;
| 2  | Henry | 80000  | 2            |&lt;br /&gt;
| 3  | Sam   | 60000  | 2            |&lt;br /&gt;
| 4  | Max   | 90000  | 1            |&lt;br /&gt;
| 5  | Janet | 69000  | 1            |&lt;br /&gt;
| 6  | Randy | 85000  | 1            |&lt;br /&gt;
+—-+——-+——–+————–+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Department table holds all departments of the company.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;+—-+———-+&lt;br /&gt;
| Id | Name     |&lt;br /&gt;
+—-+———-+&lt;br /&gt;
| 1  | IT       |&lt;br /&gt;
| 2  | Sales    |&lt;br /&gt;
+—-+———-+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Write a SQL query to find employees who earn the top three salaries in each of the department. For the above tables, your SQL query should return the following rows.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;+————+———-+——–+&lt;br /&gt;
| Department | Employee | Salary |&lt;br /&gt;
+————+———-+——–+&lt;br /&gt;
| IT         | Max      | 90000  |&lt;br /&gt;
| IT         | Randy    | 85000  |&lt;br /&gt;
| IT         | Joe      | 70000  |&lt;br /&gt;
| Sales      | Henry    | 80000  |&lt;br /&gt;
| Sales      | Sam      | 60000  |&lt;br /&gt;
+————+———-+——–+&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;解答：上一题的增强版，要输出前三高的薪水(薪水不重复)，：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;子查询+连接查询：&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Write your MySQL query statement below&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Department&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Employee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Salary&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Department&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DepartmentId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Id&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Salary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Salary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Salary&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DepartmentId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Salary&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这个不是很好理解，问题的关键在于子查询这里，取同一部门的所有薪水超过当前比较薪水的个数要小于3，即0,1,2，然后输出&lt;code class=&quot;highlighter-rouge&quot;&gt;e.salary&lt;/code&gt;,也就是取出部门的最高，次高和第三高的薪水。&lt;/p&gt;
</description>
				<pubDate>Tue, 20 Jun 2017 17:21:06 +0800</pubDate>
				<link>http://localhost:4000/2017/06/Leetcode-database-185</link>
				<guid isPermaLink="true">http://localhost:4000/2017/06/Leetcode-database-185</guid>
			</item>
		
	</channel>
</rss>
