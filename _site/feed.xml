<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>flypig's house</title>
		<description>a way to effect world</description>
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Linux Commands</title>
				<description>&lt;h2 id=&quot;1常用指令&quot;&gt;1.常用指令&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;su　user/root　　切换用户&lt;/li&gt;
  &lt;li&gt;ls　显示文件或目录
    &lt;ul&gt;
      &lt;li&gt;-l　显示文件的详细信息&lt;/li&gt;
      &lt;li&gt;-a　显示隐藏的文件或目录&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;cd　目录切换&lt;/li&gt;
  &lt;li&gt;mkdir　创建目录&lt;/li&gt;
  &lt;li&gt;echo　结果输出，可写入到文件&lt;/li&gt;
  &lt;li&gt;touch　创建一个空的文件&lt;/li&gt;
  &lt;li&gt;cat　查看文件内容&lt;/li&gt;
  &lt;li&gt;cp　复制&lt;/li&gt;
  &lt;li&gt;mv　移动&lt;/li&gt;
  &lt;li&gt;rm　删除文件&lt;br /&gt;
  -r　递归删除&lt;br /&gt;
  -f　强制删除&lt;/li&gt;
  &lt;li&gt;ln　创建链接
    &lt;ul&gt;
      &lt;li&gt;-s　创建软链接&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;ctrl + alt + F1　切换到命令行模式
    &lt;ul&gt;
      &lt;li&gt;+alt + F2　切换到图形界面&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;kill　杀死进程&lt;/li&gt;
  &lt;li&gt;ps/top　查看进程id&lt;/li&gt;
  &lt;li&gt;shutdown　关机&lt;/li&gt;
  &lt;li&gt;reboot　重启&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2vim命令&quot;&gt;2.vim命令&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;i　切换插入模式&lt;/li&gt;
  &lt;li&gt;esc　切换到命令模式&lt;br /&gt;
命令模式下：&lt;/li&gt;
  &lt;li&gt;:q　退出&lt;/li&gt;
  &lt;li&gt;:w　写入&lt;/li&gt;
  &lt;li&gt;:q!　强制退出&lt;/li&gt;
  &lt;li&gt;:wq　保存后退出&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Wed, 10 May 2017 11:41:06 +0800</pubDate>
				<link>http://localhost:4000/2017/05/Linux-commands</link>
				<guid isPermaLink="true">http://localhost:4000/2017/05/Linux-commands</guid>
			</item>
		
			<item>
				<title>PSR-2</title>
				<description>&lt;p&gt;This guide extends and expands on &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md&quot;&gt;PSR-1&lt;/a&gt;, the basic coding standard.&lt;/p&gt;

&lt;p&gt;The intent of this guide is to reduce cognitive friction when scanning code from different authors. It does so by enumerating a shared set of rules and expectations about how to format PHP code.&lt;/p&gt;

&lt;p&gt;The style rules herein are derived from commonalities among the various member projects. When various authors collaborate across multiple projects, it helps to have one set of guidelines to be used among all those projects. Thus, the benefit of this guide is not in the rules themselves, but in the sharing of those rules.&lt;/p&gt;

&lt;p&gt;The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2119.txt&quot;&gt;RFC 2119&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;1-overview&quot;&gt;1. Overview&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Code MUST follow a “coding style guide” PSR &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-1-basic-coding-standard.md&quot;&gt;PSR-1&lt;/a&gt;, the basic coding standard.&lt;/li&gt;
  &lt;li&gt;Code MUST use 4 spaces for indenting, not tabs.&lt;/li&gt;
  &lt;li&gt;There MUST NOT be a hard limit on line length; the soft limit MUST be 120 characters; lines SHOULD be 80 characters or less.&lt;/li&gt;
  &lt;li&gt;There MUST be one blank line after the &lt;code class=&quot;highlighter-rouge&quot;&gt;namespace&lt;/code&gt; declaration, and there MUST be one blank line after the block of &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; declarations.&lt;/li&gt;
  &lt;li&gt;Opening braces for classes MUST go on the next line, and closing braces MUST go on the next line after the body.&lt;/li&gt;
  &lt;li&gt;Opening braces for methods MUST go on the next line, and closing braces MUST go on the next line after the body.&lt;/li&gt;
  &lt;li&gt;Visibility MUST be declared on all properties and methods; &lt;code class=&quot;highlighter-rouge&quot;&gt;abstract&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;final&lt;/code&gt; MUST be declared before the visibility; &lt;code class=&quot;highlighter-rouge&quot;&gt;static&lt;/code&gt; MUST be declared after the visibility.&lt;/li&gt;
  &lt;li&gt;Control structure keywords MUST have one space after them; method and function calls MUST NOT.&lt;/li&gt;
  &lt;li&gt;Opening braces for control structures MUST go on the same line, and closing braces MUST go on the next line after the body.&lt;/li&gt;
  &lt;li&gt;Opening parentheses for control structures MUST NOT have a space after them, and closing parentheses for control structures MUST NOT have a space before.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;11-example&quot;&gt;1.1 Example&lt;/h3&gt;

&lt;p&gt;This example encompasses some of the rules below as a quick overview:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vendor\Package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FooInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarClass&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;OtherVendor\OtherPackage\BazClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Foo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FooInterface&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sampleMethod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;BazClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arg3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// method body
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Fri, 05 May 2017 21:20:06 +0800</pubDate>
				<link>http://localhost:4000/2017/05/PSR-2</link>
				<guid isPermaLink="true">http://localhost:4000/2017/05/PSR-2</guid>
			</item>
		
	</channel>
</rss>
